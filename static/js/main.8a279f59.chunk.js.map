{"version":3,"sources":["components/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","value","setValue","className","onClick","incrementBy5Handler","number","prev","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAGe,SAASA,IACpB,MAAuBC,mBAAS,GAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACI,gCAEI,4EACA,wBAAQC,UAAU,eAAeC,QAAS,kBAAIC,EAAoB,IAAlE,eAEA,wBAAQF,UAAU,eAAeC,QAAS,kBAAIC,EAAoB,KAAlE,gBACA,uBACA,wBAAQF,UAAU,eAAeC,QAAS,kBAAIC,EAAoB,KAAlE,gBACA,uBACA,wBAAQF,UAAU,eAAeC,QAAS,kBAAIC,EAAoB,IAAlE,eACA,uBACA,wBAAQF,UAAU,eAAeC,QAAS,kBAAIC,EAAoB,IAAlE,eACA,wBAAQF,UAAU,eAAeC,QAAS,kBAAIC,EAAoB,IAAlE,eACA,uBACA,uBAAMF,UAAU,uBAAhB,cAAyCF,QAKjD,SAASI,EAAoBC,GACzBJ,GAAU,SAAAK,GAAI,OAAGA,EAAKD,KACtBE,QAAQC,IAAI,CAACH,YChBNI,MATf,WACE,OACE,sBAAKP,UAAU,MAAf,UACA,6CACA,cAAC,EAAD,QCIWQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a279f59.chunk.js","sourcesContent":["import './Counter.css'\r\nimport { useState } from 'react';\r\n\r\nexport default function Counter() {\r\n    const [value,setValue]=useState(0);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <p> counter Game for learning React Use states</p>\r\n            <button className=\"button-color\" onClick={()=>incrementBy5Handler(5)}>5</button>\r\n\r\n            <button className=\"button-color\" onClick={()=>incrementBy5Handler(10)}>10</button>\r\n            <br/>\r\n            <button className=\"button-color\" onClick={()=>incrementBy5Handler(15)}>15</button>\r\n            <br/>\r\n            <button className=\"button-color\" onClick={()=>incrementBy5Handler(1)}>1</button>\r\n            <br/>\r\n            <button className=\"button-color\" onClick={()=>incrementBy5Handler(2)}>2</button>\r\n            <button className=\"button-color\" onClick={()=>incrementBy5Handler(3)}>3</button>\r\n            <br/>\r\n            <span className=\"display-button-color\"> {value}</span>\r\n\r\n        </div>\r\n    )\r\n\r\n    function incrementBy5Handler(number) {\r\n        setValue( prev=> prev+number)\r\n        console.log({number} )\r\n\r\n    }\r\n}","\nimport './App.css';\nimport Counter from './components/Counter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <h1> smartstar </h1>\n    <Counter/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}